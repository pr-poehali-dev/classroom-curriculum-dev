import { useParams } from 'react-router-dom';
import { curriculum } from '@/data/curriculum';
import QuizGame from './games/QuizGame';
import MatchGame from './games/MatchGame';
import SortGame from './games/SortGame';
import MemoryGame from './games/MemoryGame';
import PuzzleGame from './games/PuzzleGame';

const sampleGames = {
  'topic-1-1': {
    type: 'quiz' as const,
    data: {
      title: '–ß—Ç–æ —Ç–∞–∫–æ–µ –†–æ–¥–∏–Ω–∞?',
      questions: [
        {
          question: '–ß—Ç–æ –º—ã –Ω–∞–∑—ã–≤–∞–µ–º –†–æ–¥–∏–Ω–æ–π?',
          options: [
            '–ú–µ—Å—Ç–æ, –≥–¥–µ –º—ã —Ä–æ–¥–∏–ª–∏—Å—å –∏ –∂–∏–≤—ë–º',
            '–¢–æ–ª—å–∫–æ –≥–æ—Ä–æ–¥ –ú–æ—Å–∫–≤–∞',
            '–õ—é–±–∞—è —Å—Ç—Ä–∞–Ω–∞ –º–∏—Ä–∞',
            '–ú–µ—Å—Ç–æ, –≥–¥–µ –º–Ω–æ–≥–æ –¥–µ–Ω–µ–≥'
          ],
          correctAnswer: 0,
          explanation: '–†–æ–¥–∏–Ω–∞ - —ç—Ç–æ –º–µ—Å—Ç–æ, –≥–¥–µ –º—ã —Ä–æ–¥–∏–ª–∏—Å—å, –≤—ã—Ä–æ—Å–ª–∏, –≥–¥–µ –∂–∏–≤—É—Ç –Ω–∞—à–∏ –±–ª–∏–∑–∫–∏–µ –∏ –¥—Ä—É–∑—å—è.'
        },
        {
          question: '–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –Ω–∞—à–∞ –†–æ–¥–∏–Ω–∞?',
          options: ['–†–æ—Å—Å–∏—è', '–ê–º–µ—Ä–∏–∫–∞', '–ö–∏—Ç–∞–π', '–§—Ä–∞–Ω—Ü–∏—è'],
          correctAnswer: 0,
          explanation: '–ù–∞—à–∞ –†–æ–¥–∏–Ω–∞ - –†–æ—Å—Å–∏—è, —Å–∞–º–∞—è –±–æ–ª—å—à–∞—è —Å—Ç—Ä–∞–Ω–∞ –≤ –º–∏—Ä–µ!'
        }
      ]
    }
  },
  'topic-1-2': {
    type: 'match' as const,
    data: {
      title: '–ß—Ç–æ –º—ã –∑–Ω–∞–µ–º –æ –Ω–∞—Ä–æ–¥–∞—Ö –†–æ—Å—Å–∏–∏?',
      pairs: [
        { left: '–†—É—Å—Å–∫–∏–µ', right: '–°–∞–º—ã–π –º–Ω–æ–≥–æ—á–∏—Å–ª–µ–Ω–Ω—ã–π –Ω–∞—Ä–æ–¥ –†–æ—Å—Å–∏–∏' },
        { left: '–¢–∞—Ç–∞—Ä—ã', right: '–í—Ç–æ—Ä–æ–π –ø–æ —á–∏—Å–ª–µ–Ω–Ω–æ—Å—Ç–∏ –Ω–∞—Ä–æ–¥' },
        { left: '–ë–∞—à–∫–∏—Ä—ã', right: '–ñ–∏–≤—É—Ç –≤ –ë–∞—à–∫–æ—Ä—Ç–æ—Å—Ç–∞–Ω–µ' },
        { left: '–ß–µ—á–µ–Ω—Ü—ã', right: '–ñ–∏–≤—É—Ç –≤ –ß–µ—á–µ–Ω—Å–∫–æ–π –†–µ—Å–ø—É–±–ª–∏–∫–µ' }
      ]
    }
  },
  'topic-1-4': {
    type: 'sort' as const,
    data: {
      title: '–ß—Ç–æ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –ø—Ä–∏—Ä–æ–¥–µ?',
      categories: [
        {
          name: '–ñ–∏–≤–∞—è –ø—Ä–∏—Ä–æ–¥–∞',
          items: ['–î–µ—Ä–µ–≤–æ', '–ü—Ç–∏—Ü–∞', '–†—ã–±–∞', '–¶–≤–µ—Ç–æ–∫'],
          color: '#22c55e'
        },
        {
          name: '–ù–µ–∂–∏–≤–∞—è –ø—Ä–∏—Ä–æ–¥–∞',
          items: ['–ö–∞–º–µ–Ω—å', '–í–æ–¥–∞', '–°–æ–ª–Ω—Ü–µ', '–í–æ–∑–¥—É—Ö'],
          color: '#3b82f6'
        },
        {
          name: '–ù–µ –ø—Ä–∏—Ä–æ–¥–∞',
          items: ['–î–æ–º', '–ú–∞—à–∏–Ω–∞', '–°—Ç–æ–ª', '–ö–Ω–∏–≥–∞'],
          color: '#ef4444'
        }
      ]
    }
  },
  'topic-1-10': {
    type: 'memory' as const,
    data: {
      title: '–ß—Ç–æ —ç—Ç–æ –∑–∞ –ª–∏—Å—Ç—å—è?',
      cards: [
        { id: '1', content: '–ë–µ—Ä—ë–∑–∞', emoji: 'üå≥' },
        { id: '2', content: '–î—É–±', emoji: 'üå≥' },
        { id: '3', content: '–ö–ª—ë–Ω', emoji: 'üçÅ' },
        { id: '4', content: '–û—Å–∏–Ω–∞', emoji: 'üåø' },
        { id: '5', content: '–†—è–±–∏–Ω–∞', emoji: 'üçÇ' },
        { id: '6', content: '–õ–∏–ø–∞', emoji: 'üå≥' }
      ]
    }
  },
  'topic-1-7': {
    type: 'puzzle' as const,
    data: {
      title: '–ß—Ç–æ –æ–±—â–µ–≥–æ —É —Ä–∞–∑–Ω—ã—Ö —Ä–∞—Å—Ç–µ–Ω–∏–π?',
      description: '–†–∞—Å—Å—Ç–∞–≤—å—Ç–µ —á–∞—Å—Ç–∏ —Ä–∞—Å—Ç–µ–Ω–∏—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ —Å–Ω–∏–∑—É –≤–≤–µ—Ä—Ö',
      pieces: [
        { id: '1', content: '–ö–æ—Ä–µ–Ω—å - –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∑–µ–º–ª–µ, –¥–µ—Ä–∂–∏—Ç —Ä–∞—Å—Ç–µ–Ω–∏–µ', correctPosition: 0 },
        { id: '2', content: '–°—Ç–µ–±–µ–ª—å - –ø–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è –≤–≤–µ—Ä—Ö, –Ω–µ—Å—ë—Ç –ª–∏—Å—Ç—å—è', correctPosition: 1 },
        { id: '3', content: '–õ–∏—Å—Ç—å—è - –∑–µ–ª—ë–Ω—ã–µ, –ø–æ–º–æ–≥–∞—é—Ç –¥—ã—à–∞—Ç—å', correctPosition: 2 },
        { id: '4', content: '–¶–≤–µ—Ç–æ–∫ - —è—Ä–∫–∏–π, –∏–∑ –Ω–µ–≥–æ –ø–æ—è–≤–∏—Ç—Å—è –ø–ª–æ–¥', correctPosition: 3 },
        { id: '5', content: '–ü–ª–æ–¥ - —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–µ–º–µ–Ω–∞', correctPosition: 4 }
      ]
    }
  }
};

export default function GameLoader() {
  const { topicId } = useParams<{ topicId: string }>();
  
  if (!topicId) {
    return <div className="min-h-screen flex items-center justify-center">–¢–µ–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</div>;
  }

  const topic = curriculum
    .flatMap(m => m.topics)
    .find(t => t.id === topicId);

  if (!topic) {
    return <div className="min-h-screen flex items-center justify-center">–¢–µ–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</div>;
  }

  const sampleGame = sampleGames[topicId as keyof typeof sampleGames];

  if (sampleGame) {
    if (sampleGame.type === 'quiz') {
      return <QuizGame {...sampleGame.data} />;
    }
    if (sampleGame.type === 'match') {
      return <MatchGame {...sampleGame.data} />;
    }
    if (sampleGame.type === 'sort') {
      return <SortGame {...sampleGame.data} />;
    }
    if (sampleGame.type === 'memory') {
      return <MemoryGame {...sampleGame.data} />;
    }
    if (sampleGame.type === 'puzzle') {
      return <PuzzleGame {...sampleGame.data} />;
    }
  }

  const defaultQuestions = [
    {
      question: `–ò–∑—É—á–∞–µ–º —Ç–µ–º—É: ${topic.title}`,
      options: [
        '–Ø –≥–æ—Ç–æ–≤ —É—á–∏—Ç—å—Å—è!',
        '–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω—ë–º!',
        '–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ —É–∑–Ω–∞—Ç—å –Ω–æ–≤–æ–µ!',
        '–ë—É–¥—É –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–º!'
      ],
      correctAnswer: 0,
      explanation: '–û—Ç–ª–∏—á–Ω—ã–π –Ω–∞—Å—Ç—Ä–æ–π! –≠—Ç–∞ –∏–≥—Ä–∞ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –Ω–∞–ø–æ–ª–Ω–µ–Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏.'
    }
  ];

  return <QuizGame title={topic.title} questions={defaultQuestions} />;
}
