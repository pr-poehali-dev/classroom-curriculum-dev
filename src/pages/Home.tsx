import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import Icon from '@/components/ui/icon';
import { Link, useNavigate } from 'react-router-dom';
import EditableContent from '@/components/EditableContent';
import AnimatedCharacter from '@/components/AnimatedCharacter';
import RippleCard from '@/components/RippleCard';
import { useEditMode } from '@/components/EditModeContext';
import { Input } from '@/components/ui/input';
import { useLocalStorage } from '@/hooks/useLocalStorage';

export default function Home() {
  const navigate = useNavigate();
  const { isEditMode, toggleEditMode } = useEditMode();
  
  const [backgroundColor, setBackgroundColor] = useLocalStorage('homeBackgroundColor', '#f0f9f0');
  
  const [texts, setTexts] = useLocalStorage('homeTexts', {
    mainTitle: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –ø—Ä–∏—Ä–æ–¥—ã!',
    mainSubtitle: '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É "–û–∫—Ä—É–∂–∞—é—â–∏–π –º–∏—Ä" –¥–ª—è —É—á–µ–Ω–∏–∫–æ–≤ 1-4 –∫–ª–∞—Å—Å–æ–≤ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–µ –£–ú–ö "–®–∫–æ–ª–∞ –†–æ—Å—Å–∏–∏"',
    aboutProjectTitle: '–û –ø—Ä–æ–µ–∫—Ç–µ',
    aboutProjectText: '–ü–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∏–≥—Ä–∞–º–∏, –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞–º–∏ –∏ —Ç–≤–æ—Ä—á–µ—Å–∫–∏–º–∏ –∑–∞–¥–∞–Ω–∏—è–º–∏. –£—á–∏—Ç–µ—Å—å –≤–º–µ—Å—Ç–µ —Å –ú—É—Ä–∞–≤—å–∏—à–∫–æ–π –í–æ–ø—Ä–æ—Å–∏–∫–æ–º –∏ –ú—É–¥—Ä–æ–π –ß–µ—Ä–µ–ø–∞—Ö–æ–π!',
    aboutAuthorTitle: '–û–± –∞–≤—Ç–æ—Ä–µ',
    aboutAuthorText: '–ü—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω —É—á–∏—Ç–µ–ª–µ–º –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤ —Å –º–Ω–æ–≥–æ–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–µ "–®–∫–æ–ª–∞ –†–æ—Å—Å–∏–∏". –¶–µ–ª—å - —Å–¥–µ–ª–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–º.',
    ctaTitle: '–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ?',
    ctaText: '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —Ç—ã—Å—è—á–∞–º —É—á–µ–Ω–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –æ—Ç–∫—Ä—ã–≤–∞—é—Ç –¥–ª—è —Å–µ–±—è –º–∏—Ä –ø—Ä–∏—Ä–æ–¥—ã!',
    contactEmail: 'info@example.com',
    contactPhone: '+7 (999) 123-45-67'
  });
  
  const [media, setMedia] = useLocalStorage('homeMedia', {
    projectImage: 'https://cdn.poehali.dev/files/51871eff-33d4-41d4-9edf-4145c31c1c07.png',
    authorImage: 'https://cdn.poehali.dev/files/51871eff-33d4-41d4-9edf-4145c31c1c07.png'
  });

  const updateText = (key: string, value: string) => {
    setTexts(prev => ({ ...prev, [key]: value }));
  };
  
  const updateMedia = (key: string, value: string) => {
    setMedia(prev => ({ ...prev, [key]: value }));
  };

  return (
    <div className="min-h-screen relative overflow-hidden" style={{ backgroundColor }}>
      <div className="watercolor-leaves" />
      <div className="absolute inset-0 gradient-nature opacity-90" />
      
      {isEditMode && (
        <div className="fixed bottom-4 right-4 z-50 bg-white/95 backdrop-blur-md p-4 rounded-2xl shadow-2xl border-2 border-green-300">
          <p className="text-sm font-semibold text-green-800 mb-2">üé® –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–æ–Ω–∞</p>
          <div className="flex gap-2 items-center">
            <Input
              type="color"
              value={backgroundColor}
              onChange={(e) => setBackgroundColor(e.target.value)}
              className="w-16 h-10 cursor-pointer"
            />
            <span className="text-xs text-muted-foreground">{backgroundColor}</span>
          </div>
        </div>
      )}
      
      <header className="relative z-10 bg-white/80 backdrop-blur-md border-b border-green-200 shadow-sm">
        <div className="container mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-3">
              <div className="w-12 h-12 bg-gradient-to-br from-green-400 to-green-600 rounded-2xl flex items-center justify-center shadow-lg transform hover:scale-110 transition-transform">
                <span className="text-3xl">üåø</span>
              </div>
              <div>
                <h1 className="text-2xl font-bold bg-gradient-to-r from-green-700 to-green-500 bg-clip-text text-transparent">
                  –û–∫—Ä—É–∂–∞—é—â–∏–π –º–∏—Ä
                </h1>
                <p className="text-sm text-green-600">–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ</p>
              </div>
            </div>
            <div className="flex gap-2">
              <Button
                onClick={toggleEditMode}
                variant={isEditMode ? 'default' : 'outline'}
                className="gap-2"
              >
                <Icon name={isEditMode ? 'Lock' : 'Edit'} size={18} />
                {isEditMode ? '–ó–∞–≤–µ—Ä—à–∏—Ç—å' : '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å'}
              </Button>
              <Link to="/learn">
                <Button className="gap-2 bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700">
                  <Icon name="BookOpen" size={18} />
                  –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ
                </Button>
              </Link>
            </div>
          </div>
        </div>
      </header>

      <main className="relative z-10">
        <section className="container mx-auto px-4 py-16">
          <div className="text-center mb-12">
            <div className="flex justify-center items-center gap-8 mb-6">
              <div className="hidden md:block transform -scale-x-100">
                <AnimatedCharacter type="ant" animation="happy" size={160} />
              </div>
              <div className="flex-1">
                <EditableContent
                  initialValue={texts.mainTitle}
                  onSave={(value) => updateText('mainTitle', value)}
                  as="h2"
                  className="text-5xl font-bold mb-4 bg-gradient-to-r from-green-800 via-green-600 to-green-500 bg-clip-text text-transparent"
                />
                <EditableContent
                  initialValue={texts.mainSubtitle}
                  onSave={(value) => updateText('mainSubtitle', value)}
                  as="p"
                  className="text-xl text-green-700 max-w-3xl mx-auto leading-relaxed"
                />
              </div>
              <div className="hidden md:block">
                <AnimatedCharacter type="turtle" animation="happy" size={160} />
              </div>
            </div>
          </div>

          <div className="grid md:grid-cols-2 gap-8 mb-16">
            <RippleCard 
              className="watercolor-card border-2 border-green-200 shadow-xl hover:shadow-2xl transition-all hover:-translate-y-1 cursor-pointer active:scale-95 active:shadow-lg"
              onClick={() => navigate('/about-project')}
            >
              <CardContent className="p-6">
                <div className="flex items-center justify-between mb-4">
                  <EditableContent
                    initialValue={texts.aboutProjectTitle}
                    onSave={(value) => updateText('aboutProjectTitle', value)}
                    as="h3"
                    className="text-2xl font-bold text-green-800"
                  />
                  <Icon name="ChevronRight" className="text-green-600" size={24} />
                </div>
                <EditableContent
                  type="image"
                  initialValue={media.projectImage}
                  onSave={(value) => updateMedia('projectImage', value)}
                  className="aspect-video rounded-xl mb-4 w-full object-cover"
                />
                <EditableContent
                  initialValue={texts.aboutProjectText}
                  onSave={(value) => updateText('aboutProjectText', value)}
                  as="p"
                  className="text-green-700 line-clamp-3"
                />
              </CardContent>
            </RippleCard>

            <RippleCard 
              className="watercolor-card border-2 border-green-200 shadow-xl hover:shadow-2xl transition-all hover:-translate-y-1 cursor-pointer active:scale-95 active:shadow-lg"
              onClick={() => navigate('/about-author')}
            >
              <CardContent className="p-6">
                <div className="flex items-center justify-between mb-4">
                  <EditableContent
                    initialValue={texts.aboutAuthorTitle}
                    onSave={(value) => updateText('aboutAuthorTitle', value)}
                    as="h3"
                    className="text-2xl font-bold text-green-800"
                  />
                  <Icon name="ChevronRight" className="text-green-600" size={24} />
                </div>
                <EditableContent
                  type="image"
                  initialValue={media.authorImage}
                  onSave={(value) => updateMedia('authorImage', value)}
                  className="aspect-video rounded-xl mb-4 w-full object-cover"
                />
                <EditableContent
                  initialValue={texts.aboutAuthorText}
                  onSave={(value) => updateText('aboutAuthorText', value)}
                  as="p"
                  className="text-green-700 line-clamp-3"
                />
              </CardContent>
            </RippleCard>
          </div>

          <div className="mb-16">
            <h3 className="text-3xl font-bold text-center mb-8 text-green-800">
              üéÆ –£—Ä–æ–≤–Ω–∏ –∏–≥—Ä
            </h3>
            <div className="grid md:grid-cols-4 gap-6">
              <Card className="watercolor-card border-2 border-green-300 bg-gradient-to-br from-green-50 to-green-100">
                <CardHeader>
                  <div className="w-16 h-16 mx-auto bg-green-200 rounded-full flex items-center justify-center mb-3">
                    <span className="text-3xl">üå±</span>
                  </div>
                  <CardTitle className="text-center text-green-800">–õ—ë–≥–∫–∏–π</CardTitle>
                  <CardDescription className="text-center text-green-600">
                    –î–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <ul className="space-y-2 text-sm text-green-700">
                    <li className="flex items-center gap-2">
                      <Icon name="Check" size={16} className="text-green-600" />
                      –ü—Ä–æ—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã
                    </li>
                    <li className="flex items-center gap-2">
                      <Icon name="Check" size={16} className="text-green-600" />
                      –ë–∞–∑–æ–≤—ã–µ –ø–æ–Ω—è—Ç–∏—è
                    </li>
                    <li className="flex items-center gap-2">
                      <Icon name="Check" size={16} className="text-green-600" />
                      –ü–æ–¥—Å–∫–∞–∑–∫–∏
                    </li>
                  </ul>
                </CardContent>
              </Card>

              <Card className="watercolor-card border-2 border-yellow-300 bg-gradient-to-br from-yellow-50 to-yellow-100">
                <CardHeader>
                  <div className="w-16 h-16 mx-auto bg-yellow-200 rounded-full flex items-center justify-center mb-3">
                    <span className="text-3xl">üåø</span>
                  </div>
                  <CardTitle className="text-center text-yellow-800">–°—Ä–µ–¥–Ω–∏–π</CardTitle>
                  <CardDescription className="text-center text-yellow-600">
                    –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–∞—é—â–∏—Ö
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <ul className="space-y-2 text-sm text-yellow-700">
                    <li className="flex items-center gap-2">
                      <Icon name="Check" size={16} className="text-yellow-600" />
                      –£–≥–ª—É–±–ª—ë–Ω–Ω—ã–µ —Ç–µ–º—ã
                    </li>
                    <li className="flex items-center gap-2">
                      <Icon name="Check" size={16} className="text-yellow-600" />
                      –õ–æ–≥–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏
                    </li>
                    <li className="flex items-center gap-2">
                      <Icon name="Check" size={16} className="text-yellow-600" />
                      –ú–µ–Ω—å—à–µ –ø–æ–¥—Å–∫–∞–∑–æ–∫
                    </li>
                  </ul>
                </CardContent>
              </Card>

              <Card className="watercolor-card border-2 border-red-300 bg-gradient-to-br from-red-50 to-red-100">
                <CardHeader>
                  <div className="w-16 h-16 mx-auto bg-red-200 rounded-full flex items-center justify-center mb-3">
                    <span className="text-3xl">üå≥</span>
                  </div>
                  <CardTitle className="text-center text-red-800">–°–ª–æ–∂–Ω—ã–π</CardTitle>
                  <CardDescription className="text-center text-red-600">
                    –î–ª—è –æ–ø—ã—Ç–Ω—ã—Ö
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <ul className="space-y-2 text-sm text-red-700">
                    <li className="flex items-center gap-2">
                      <Icon name="Check" size={16} className="text-red-600" />
                      –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ –∑–∞–¥–∞—á–∏
                    </li>
                    <li className="flex items-center gap-2">
                      <Icon name="Check" size={16} className="text-red-600" />
                      –ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ
                    </li>
                    <li className="flex items-center gap-2">
                      <Icon name="Check" size={16} className="text-red-600" />
                      –û–ª–∏–º–ø–∏–∞–¥–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å
                    </li>
                  </ul>
                </CardContent>
              </Card>

              <Card className="watercolor-card border-2 border-purple-300 bg-gradient-to-br from-purple-50 to-purple-100">
                <CardHeader>
                  <div className="w-16 h-16 mx-auto bg-purple-200 rounded-full flex items-center justify-center mb-3">
                    <span className="text-3xl">üé®</span>
                  </div>
                  <CardTitle className="text-center text-purple-800">–¢–≤–æ—Ä—á–µ—Å–∫–∏–π</CardTitle>
                  <CardDescription className="text-center text-purple-600">
                    –î–ª—è –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã—Ö
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <ul className="space-y-2 text-sm text-purple-700">
                    <li className="flex items-center gap-2">
                      <Icon name="Check" size={16} className="text-purple-600" />
                      –ü—Ä–æ–µ–∫—Ç–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è
                    </li>
                    <li className="flex items-center gap-2">
                      <Icon name="Check" size={16} className="text-purple-600" />
                      –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
                    </li>
                    <li className="flex items-center gap-2">
                      <Icon name="Check" size={16} className="text-purple-600" />
                      –°–≤–æ–±–æ–¥–Ω–æ–µ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ
                    </li>
                  </ul>
                </CardContent>
              </Card>
            </div>
          </div>

          <div className="mb-16">
            <h3 className="text-3xl font-bold text-center mb-8 text-green-800">
              ‚ú® –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
            </h3>
            <div className="grid md:grid-cols-3 gap-6">
              {[
                {
                  icon: 'üéÆ',
                  title: '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∏–≥—Ä—ã',
                  description: '–í–∏–∫—Ç–æ—Ä–∏–Ω—ã, –∫—Ä–æ—Å—Å–≤–æ—Ä–¥—ã, –ø–∞–∑–ª—ã, —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ'
                },
                {
                  icon: 'üå∏',
                  title: '–†–∞—Å—Ç—É—â–∏–π —Ü–≤–µ—Ç–æ–∫',
                  description: '–í–∏–∑—É–∞–ª—å–Ω–∞—è –º–æ—Ç–∏–≤–∞—Ü–∏—è —Å –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Ü–≤–µ—Ç–∫–æ–º –∑–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã'
                },
                {
                  icon: 'üêú',
                  title: '–ü–µ—Ä—Å–æ–Ω–∞–∂–∏-–ø–æ–º–æ—â–Ω–∏–∫–∏',
                  description: '–ú—É—Ä–∞–≤—å–∏—à–∫–∞ –í–æ–ø—Ä–æ—Å–∏–∫ –∏ –ú—É–¥—Ä–∞—è –ß–µ—Ä–µ–ø–∞—Ö–∞ –≤—Å–µ–≥–¥–∞ –ø–æ–º–æ–≥—É—Ç'
                },
                {
                  icon: 'üîä',
                  title: '–ó–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã',
                  description: '–ú–µ–ª–æ–¥–∏—á–Ω—ã–µ –∑–≤—É–∫–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç –≤–æ–≤–ª–µ—á—ë–Ω–Ω–æ—Å—Ç—å'
                },
                {
                  icon: 'üí°',
                  title: '–û–±—ä—è—Å–Ω–µ–Ω–∏—è',
                  description: '–ü–æ–¥—Ä–æ–±–Ω—ã–µ –ø–æ—è—Å–Ω–µ–Ω–∏—è –ø—Ä–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–∞—Ö'
                },
                {
                  icon: 'üìä',
                  title: '–ü—Ä–æ–≥—Ä–µ—Å—Å',
                  description: '–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'
                }
              ].map((feature, i) => (
                <Card key={i} className="watercolor-card border-green-200 hover:shadow-xl transition-shadow">
                  <CardContent className="pt-6 text-center">
                    <div className="text-5xl mb-3">{feature.icon}</div>
                    <h4 className="text-lg font-bold text-green-800 mb-2">{feature.title}</h4>
                    <p className="text-sm text-green-600">{feature.description}</p>
                  </CardContent>
                </Card>
              ))}
            </div>
          </div>

          <div className="text-center">
            <Card className="watercolor-card border-2 border-green-300 max-w-2xl mx-auto bg-gradient-to-br from-green-50 to-yellow-50">
              <CardContent className="p-8">
                <div className="text-6xl mb-4">üöÄ</div>
                <EditableContent
                  initialValue={texts.ctaTitle}
                  onSave={(value) => updateText('ctaTitle', value)}
                  as="h3"
                  className="text-2xl font-bold text-green-800 mb-4"
                />
                <EditableContent
                  initialValue={texts.ctaText}
                  onSave={(value) => updateText('ctaText', value)}
                  as="p"
                  className="text-green-700 mb-6"
                />
                <Link to="/learn">
                  <Button size="lg" className="gap-2 bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 text-lg px-8 py-6">
                    <Icon name="Sparkles" size={20} />
                    –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ
                    <Icon name="ArrowRight" size={20} />
                  </Button>
                </Link>
              </CardContent>
            </Card>
          </div>
        </section>
      </main>

      <footer className="relative z-10 bg-white/80 backdrop-blur-md border-t border-green-200 mt-16">
        <div className="container mx-auto px-4 py-8">
          <div className="grid md:grid-cols-3 gap-8 mb-6">
            <div>
              <h4 className="font-bold text-green-800 mb-3">–û –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ</h4>
              <p className="text-sm text-green-600">
                –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –æ–∫—Ä—É–∂–∞—é—â–µ–≥–æ –º–∏—Ä–∞ –≤ –Ω–∞—á–∞–ª—å–Ω–æ–π —à–∫–æ–ª–µ
              </p>
            </div>
            <div>
              <h4 className="font-bold text-green-800 mb-3">–°—Å—ã–ª–∫–∏</h4>
              <ul className="space-y-2 text-sm text-green-600">
                <li><a href="#" className="hover:text-green-800 transition-colors">–û –ø—Ä–æ–µ–∫—Ç–µ</a></li>
                <li><a href="#" className="hover:text-green-800 transition-colors">–ö–æ–Ω—Ç–∞–∫—Ç—ã</a></li>
                <li><a href="#" className="hover:text-green-800 transition-colors">–ü–æ–º–æ—â—å</a></li>
              </ul>
            </div>
            <div>
              <h4 className="font-bold text-green-800 mb-3">–ö–æ–Ω—Ç–∞–∫—Ç—ã</h4>
              <div className="text-sm text-green-600">
                <EditableContent
                  initialValue={`Email: ${texts.contactEmail}`}
                  onSave={(value) => updateText('contactEmail', value.replace('Email: ', ''))}
                  as="p"
                  className="text-sm text-green-600"
                />
                <EditableContent
                  initialValue={`–¢–µ–ª–µ—Ñ–æ–Ω: ${texts.contactPhone}`}
                  onSave={(value) => updateText('contactPhone', value.replace('–¢–µ–ª–µ—Ñ–æ–Ω: ', ''))}
                  as="p"
                  className="text-sm text-green-600"
                />
              </div>
            </div>
          </div>
          <div className="text-center text-sm text-green-600 pt-6 border-t border-green-200">
            ¬© 2024 –û–∫—Ä—É–∂–∞—é—â–∏–π –º–∏—Ä ‚Ä¢ –£–ú–ö "–®–∫–æ–ª–∞ –†–æ—Å—Å–∏–∏" ‚Ä¢ –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã
          </div>
        </div>
      </footer>
    </div>
  );
}